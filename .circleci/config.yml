# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
orbs:
  sam: circleci/aws-sam-serverless@2.1.0
jobs:
  build:
    docker:
      - image: cimg/python:3.11.4

    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "requirements.txt" }}-{{ checksum
              "requirements-dev.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v4-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -r requirements-dev.txt

      - save_cache:
          paths:
            - ./.venv
          key: v4-dependencies-{{ checksum "requirements.txt" }}-{{ checksum
            "requirements-dev.txt" }}

      - persist_to_workspace:
          root: ~/
          paths:
            - repo

  unit-tests:
    docker:
      - image: cimg/python:3.11.4

    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: run tests
          command: |
            . .venv/bin/activate
            pytest --junitxml=test-reports/pytest/junit.xml

      - store_test_results:
          path: test-reports
  mypy:
    docker:
      - image: cimg/python:3.11.4

    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install "mypy==1.5.1" "types-requests==2.31.0"

      - run:
          name: run mypy
          command: |
            . .venv/bin/activate
            mypy --ignore-missing-imports --scripts-are-modules --junit-xml test-reports/mypy/junit.xml ddw

      - store_test_results:
          path: test-reports

  black:
    docker:
      - image: cimg/python:3.11.4

    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: install dependencies
          command: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install black

      - run:
          name: run black
          command: |
            . .venv/bin/activate
            black --check .

  deploy:
    docker:
      - image: cimg/python:3.11.4
    working_directory: ~/repo
    steps:
      - checkout
      - sam/install
      - run:
          name: reinstall with crypto patch
          command: pip install aws-sam-cli --force-reinstall "cryptography==38.0.4"
      - run:
          name: sam build
          command: sam build
      - run:
          name: sam deploy
          command: sam deploy --stack-name ddw --capabilities CAPABILITY_IAM --s3-bucket
            aws-sam-cli-managed-default-samclisourcebucket-jdq32m7bbjhg
            --s3-prefix ddw
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

workflows:
  version: 2
  tests:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - mypy:
          requires:
            - build
      - black:
          requires:
            - build
      - deploy:
          requires:
            - unit-tests
            - mypy
            - black
          filters:
            branches:
              only: master
